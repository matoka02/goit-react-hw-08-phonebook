{"version":3,"file":"static/js/272.a00385fb.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/Contacts.jsx","redux/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport { addContactThunk } from 'redux/contacts/operations';\nimport { getFilteredContacts } from 'redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(getFilteredContacts);\n  // console.log(items);\n\n    // добавление\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n\n    const name = evt.target.elements.name.value;\n    const number = evt.target.elements.number.value;\n    const contactsList = [...items];\n\n    // проверка на дубликаты\n    let duplicate = contactsList.findIndex(contact=>contact.name.toLowerCase()===name.toLowerCase()) !== - 1;\n    // console.log(duplicate); \n\n    if (duplicate) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      const newContact = {\n        name: name,\n        number: number,\n      };\n      dispatch(addContactThunk(newContact));\n    };\n    evt.target.reset();\n  };\n\n  return(\n    <form className={css.form} onSubmit={handleFormSubmit}>\n    <label className={css.formLabel}>Name</label>\n    <input\n      className={css.formName}\n      type=\"text\"\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      required\n      placeholder=\"Enter name\"\n    />\n    <label className={css.formLabel}>Number</label>\n    <input\n      className={css.formNumber}\n      type=\"tel\"\n      name=\"number\"\n      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n      title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      required\n      placeholder=\"Enter phone number\"\n    />\n    <button className={css.formBtn} type=\"submit\">\n      Add contact\n    </button>\n  </form>    \n  ) \n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__A4sXv\",\"contactListItemBtn\":\"ContactListItem_contactListItemBtn__qTuWE\"};","import PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ id, name, number, handleDelete }) => {\n  console.log(id);\n  return (\n    <li className={css.contactListItem}>\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        type=\"submit\"\n        className={css.contactListItemBtn}\n        onClick={() => {\n          console.log('ID',id);\n          handleDelete(id)\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  )\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getFilteredContacts, selectContacts } from 'redux/contacts/selectors';\nimport { deleteContactThunk } from 'redux/contacts/operations';\n\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getFilteredContacts);\n  const users = useSelector(selectContacts);\n\n  return (\n    <div>\n      <h3>Your phonebook has {users.length} contacts</h3>\n      <ul>\n        {contacts.map((item) => (\n          <ContactListItem\n            key={item.id}\n            name={item.name}\n            number={item.number}\n            id={item.id}\n            handleDelete={() => dispatch(deleteContactThunk(item.id))}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"Filter_filterName__Y2kKA\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  // слушатель на инпут ввода (для поиска)\n  const handleSearch = ({target}) => {\n    dispatch(filterContacts(target.value));\n  };\n\n  return (\n    <div>\n      <label className={css.filterLabel}>Find contacts by name... </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        value={filter}\n        onChange={handleSearch}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { ColorRing } from 'react-loader-spinner';\n\nconst Loader = () => (\n  <div style={{ display: 'flex', justifyContent: 'center', marginTop: '50px' }}>\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  </div>\n);\n\nexport default Loader;","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { Helmet } from \"react-helmet\";\n\nimport { getContactsThunk } from \"redux/contacts/operations\";\nimport { selectError, selectIsLoading } from \"redux/contacts/selectors\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport Loader from \"components/Loader/Loader\";\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n      {/* <Helmet> */}\n        <title>Phonebook</title>\n      {/* </Helmet> */}\n      <ContactForm />\n      {isLoading && !error && <Loader />}\n      {/* <div>{isLoading && 'Request in progress...'}</div> */}\n      <Filter />\n      <ContactList />\n    </>\n  );\n}","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.isLoading;\nexport const selectError = state => state.contacts.error;\n\nconst getFilter = state => state.filter;\nconst getContacts = state => state.contacts.items;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(item =>\n      item.name.toLowerCase().trim().includes(filter.toLowerCase().trim())\n    );\n  }\n);"],"names":["dispatch","useDispatch","items","useSelector","getFilteredContacts","className","css","onSubmit","evt","preventDefault","name","target","elements","value","number","findIndex","contact","toLowerCase","alert","newContact","addContactThunk","reset","type","pattern","title","required","placeholder","ContactListItem","id","handleDelete","console","log","onClick","contacts","users","selectContacts","length","map","item","deleteContactThunk","filter","selectFilter","onChange","filterContacts","style","display","justifyContent","marginTop","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Contacts","isLoading","selectIsLoading","error","selectError","useEffect","getContactsThunk","state","createSelector","trim","includes"],"sourceRoot":""}